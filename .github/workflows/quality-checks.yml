name: Quality Checks

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run Black formatter check
      run: |
        black --check --diff .

    - name: Run isort import checker
      run: |
        isort --check-only --diff .

    - name: Run Flake8 linter
      run: |
        flake8 .

    - name: Validate Import Depth
      run: |
        python scripts/validate_imports.py

    - name: Run MyPy type checker
      run: |
        mypy gmail_service search_service vector_service

    - name: Run Bandit security checker
      run: |
        bandit -r gmail_service search_service vector_service

    - name: Run tests with coverage
      run: |
        pytest --cov=gmail_service --cov=search_service --cov=vector_service --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Generate coverage badge
      if: matrix.python-version == '3.11'
      run: |
        coverage-badge -o coverage.svg -f

    - name: Check documentation
      run: |
        pydocstyle --convention=google gmail_service search_service vector_service

  integration-tests:
    runs-on: ubuntu-latest
    needs: quality

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run integration tests
      run: |
        pytest tests/test_search_realworld.py -v
        pytest tests/test_without_auth.py -v

  security-scan:
    runs-on: ubuntu-latest
    needs: quality

    steps:
    - uses: actions/checkout@v4

    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
