## **CRITICAL LEGAL DOCUMENT PROCESSING DECISIONS:**

### **1. PROCESSOR SELECTION - USE BOTH:**

```python
# RUN DUAL PROCESSING FOR MAXIMUM ACCURACY
processors = {
    'FORM_PARSER': [
        '3-day-notice-*.pdf',      # Checkboxes, fields preserved
        'unlawful-detainer-*.pdf',  # Court forms
        'complaint-*.pdf'           # Legal forms
    ],
    'OCR_PROCESSOR': [
        'email-threads-*.pdf',      # Printed emails
        'notices-*.pdf',            # General notices
        'reports-*.pdf'             # Narrative documents
    ],
    'SPECIALIZED_PARSER': [
        'discovery-responses-*.pdf'  # Use Document AI's Contract Parser
    ]
}
```

### **2. OPTIMAL SETTINGS FOR LEGAL DOCS:**

```python
claude "Configure Document AI with these EXACT settings:

document_ai_config = {
    'enable_native_pdf_parsing': True,      # ✓ YES - Critical for digital PDFs
    'enable_image_quality_scores': True,    # ✓ YES - Flag low-quality scans
    'enable_symbol': True,                  # ✓ YES - Preserves §, ¶, legal citations
    'languages': ['en-US'],                 # ✓ YES - Improves accuracy
    'enable_math': False,                   # No - Not needed
    'compute_style_info': True,             # ✓ YES - Preserves bold/italic (emphasis)
    'enable_text_extraction': True,         # ✓ YES - Full text extraction
    'advanced_ocr_options': {
        'enable_handwriting': True,          # ✓ YES - For signatures/notes
        'enable_selection_marks': True,      # ✓ YES - Checkboxes in notices
        'hints': ['legal_document']          # Helps with legal terminology
    }
}

CRITICAL: Process each document TWICE:
1. First pass: FORM_PARSER (preserves structure)
2. Second pass: OCR_PROCESSOR (captures all text)
3. Keep BOTH outputs, mark confidence scores"
```

### **3. PRIVACY/PRIVILEGE HANDLING:**

```bash
# SEGREGATE PRIVILEGED DOCUMENTS
claude "Before processing, identify and separate:

PROCESS NORMALLY (not privileged):
- All emails between you and property management
- All notices from landlord
- Filed court documents (already public)
- Inspection reports

DO NOT UPLOAD YET (may be privileged):
- Your attorney communications
- Your personal analysis/strategy docs
- Medical records related to mold exposure

Create two folders:
/ready_for_cloud/  # Safe to process
/hold_privileged/   # Review with attorney first"
```

### **4. OUTPUT STRUCTURE FOR BIGQUERY:**

```python
claude "Create this exact BigQuery-ready structure:

output_structure = {
    'document_metadata': {
        'document_id': 'SHA256_hash',
        'original_filename': '',
        'document_type': 'email|notice|complaint|report',
        'date_created': 'ISO_date',
        'date_processed': 'ISO_date',
        'processor_used': 'FORM|OCR|BOTH',
        'confidence_score': 0.95,
        'page_count': 1
    },
    
    'extracted_content': {
        'full_text': '',
        'structured_fields': {
            'parties': [],
            'dates_mentioned': [],
            'violations_detected': [],
            'money_amounts': [],
            'legal_citations': []
        },
        'entities': {
            'people': [],
            'organizations': [],
            'locations': [],
            'legal_terms': []
        }
    },
    
    'evidence_classification': {
        'claim_relevance': {
            'habitability': 0.9,
            'quiet_enjoyment': 0.7,
            'retaliation': 0.95
        },
        'evidence_strength': 'smoking_gun|strong|supporting',
        'admissibility_flags': []
    }
}

Save as both:
- /bigquery_json/{doc_id}.json  # For BigQuery import
- /text_only/{doc_id}.txt       # For Gemini analysis
- /low_confidence/{doc_id}.*    # Anything under 0.8 confidence"
```

### **5. BIGQUERY SETUP - YES, CRITICAL:**

```bash
claude "Set up BigQuery tables NOW:

CREATE DATASET stoneman_case;

CREATE TABLE stoneman_case.documents (
    document_id STRING,
    filename STRING,
    document_type STRING,
    content TEXT,
    confidence FLOAT64,
    extracted_entities JSON,
    evidence_classification JSON,
    processing_timestamp TIMESTAMP
);

CREATE TABLE stoneman_case.evidence_patterns (
    pattern_id STRING,
    pattern_type STRING,  -- 'identity_concealment', 'repair_avoidance', etc.
    documents ARRAY<STRING>,
    strength_score FLOAT64,
    legal_implications TEXT
);

CREATE TABLE stoneman_case.timeline (
    event_date DATE,
    event_description TEXT,
    source_documents ARRAY<STRING>,
    parties_involved ARRAY<STRING>,
    violation_type STRING
);"
```

### **6. CLOUD STORAGE ORGANIZATION:**

```bash
# OPTIMAL STRUCTURE FOR BIGQUERY
gs://stoneman-case-docs/
├── raw/                    # Original PDFs
│   ├── notices/
│   ├── complaints/
│   └── emails/
├── processed/              # Document AI output
│   ├── high_confidence/   # >0.9 score
│   ├── medium_confidence/ # 0.7-0.9
│   └── needs_review/      # <0.7
├── bigquery_staging/       # JSON ready for import
└── consolidated/           # Master documents for Gemini
```

### **7. IMMEDIATE EXECUTION SCRIPT:**

```bash
claude "Create and run process_legal_docs.py:

import os
from google.cloud import documentai_v1 as documentai
from google.cloud import storage
from google.cloud import bigquery
import json
import hashlib

# Process in this order:
1. Upload all PDFs to gs://stoneman-case-docs/raw/
2. Run BOTH processors on each document
3. Compare outputs, keep higher confidence
4. Extract entities and classify evidence
5. Stage for BigQuery import
6. Create consolidated master for Gemini

# CRITICAL FLAGS:
FLAG_PRIVILEGED = False  # Stop if privileged doc detected
DUAL_PROCESS = True      # Run both OCR and FORM parser
MIN_CONFIDENCE = 0.7     # Flag anything below
PRESERVE_STRUCTURE = True # Keep legal formatting

Execute now with progress bar"
```

### **MOST IMPORTANT CONSIDERATIONS:**

1. **DUAL PROCESSING** - Run both FORM_PARSER and OCR, compare results
2. **CONFIDENCE TRACKING** - Flag anything under 80% for manual review
3. **LEGAL SYMBOLS** - Must preserve §, ¶, citations exactly
4. **BIGQUERY IMMEDIATE** - Set up tables before processing
5. **PRIVILEGE CHECK** - Separate attorney communications first

### **ONE COMMAND TO RULE THEM ALL:**

```bash
claude "Execute complete pipeline:
1. Scan for privileged docs (stop if found)
2. Upload to Cloud Storage with structure
3. Run Document AI with dual processors
4. Import to BigQuery with confidence scores
5. Generate master consolidated file
6. Show statistics and any warnings
7. Prepare Gemini 2.5 Pro analysis

GO"
```

**This setup will give you court-admissible evidence with chain of custody and confidence scores.**

**Ready to execute?**