[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | logs
    | qdrant_data
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
known_third_party = ["google", "googleapiclient", "google_auth_oauthlib", "openai", "qdrant_client"]
known_first_party = ["gmail_service", "search_service", "vector_service"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "googleapiclient.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google_auth_oauthlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "qdrant_client.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "test_coverup_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=shared",
    "--cov=gmail",
    "--cov=pdf", 
    "--cov=search",
    "--cov=vector_store",
    "--cov=embeddings",
    "--cov=entity",
    "--cov=search_intelligence",
    "--cov=knowledge_graph",
    "--cov=pipelines",
    "--cov=mcp_servers",
    "--cov-branch",
    "--cov-context=test",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=25",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "vcr: marks tests using VCR.py for HTTP recording",
    "property: marks property-based tests using Hypothesis",
    "mutation: marks mutation testing scenarios",
    "requires_auth: marks tests requiring external authentication",
    "requires_models: marks tests requiring AI models",
    "coverup_generated: marks tests generated by CoverUp"
]

[tool.coverage.run]
branch = true
context = "${COVERAGE_CONTEXT:pytest}"
source = [
    "shared",
    "gmail", 
    "pdf",
    "search",
    "vector_store", 
    "embeddings",
    "entity",
    "search_intelligence", 
    "knowledge_graph",
    "pipelines",
    "mcp_servers"
]
omit = [
    "*/tests/*",
    "*/__init__.py", 
    "*/conftest.py",
    "setup_credentials.py",
    "scripts/*",
    "*/test_coverup_*.py"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true
sort = "Cover"
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
skip_covered = false
show_contexts = true

# Coverage thresholds per package
[tool.coverage.thresholds]
shared = 80
gmail = 70
pdf = 70
search = 60
vector_store = 60
embeddings = 60

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0622",  # redefined-builtin
    "C0301",  # line-too-long (handled by black)
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.basic]
good-names = ["i", "j", "k", "e", "ex", "Run", "_", "id", "db"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and paramiko tests
