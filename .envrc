# Load secrets from centralized location (prefer /secrets/.env, fallback to ~/Secrets/.env)
if [ -f /secrets/.env ]; then
  source /secrets/.env
  export SECRETS_ENV_PATH=/secrets/.env
elif [ -f "$HOME/Secrets/.env" ]; then
  source "$HOME/Secrets/.env"
  export SECRETS_ENV_PATH="$HOME/Secrets/.env"
elif [ -f ./.env ]; then
  # Last resort: project .env
  source ./.env
  export SECRETS_ENV_PATH="$PWD/.env"
fi

# Project-specific settings
export PYTHONPATH=$PWD
export LOG_LEVEL=INFO
export QDRANT__STORAGE__PATH=./qdrant_data
export QDRANT__LOG__PATH=./logs/qdrant.log
export MCP_STORAGE_DIR=$PWD/data/sequential_thinking

# Auto-start Qdrant if not running
if ! lsof -i :6333 > /dev/null; then
    echo "üöÄ Starting Qdrant vector database..."
    nohup ~/bin/qdrant > "$QDRANT__LOG__PATH" 2>&1 &
    echo "‚è≥ Waiting for Qdrant to launch..."
    for i in {1..10}; do
        if lsof -i :6333 > /dev/null; then
            echo "‚úÖ Qdrant started successfully."
            break
        fi
        sleep 0.5
    done
    if ! lsof -i :6333 > /dev/null; then
        echo "‚ö†Ô∏è  Failed to start Qdrant. Check logs in $QDRANT__LOG__PATH"
    fi
else
    echo "‚úÖ Qdrant already running."
fi

# Optional: Show loaded status
echo "üìß Email-Sync environment loaded from ${SECRETS_ENV_PATH:-unknown}"
echo "   PYTHONPATH: $PYTHONPATH"
echo "   API Keys: $([ -n "$ANTHROPIC_API_KEY" ] && echo "‚úì Loaded" || echo "‚úó Missing")"
